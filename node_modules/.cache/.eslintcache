[{"/Users/Vito/Desktop/React/Mountain-Hackathon-2023/src/index.js":"1","/Users/Vito/Desktop/React/Mountain-Hackathon-2023/src/App.js":"2","/Users/Vito/Desktop/React/Mountain-Hackathon-2023/src/reportWebVitals.js":"3","/Users/Vito/Desktop/React/Mountain-Hackathon-2023/src/chatgpt-nodejs/chat.js":"4"},{"size":537,"mtime":1676774951283,"results":"5","hashOfConfig":"6"},{"size":804,"mtime":1676775020866,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1676750372535,"results":"8","hashOfConfig":"6"},{"size":1494,"mtime":1676777483345,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15tjtda",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":6,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"/Users/Vito/Desktop/React/Mountain-Hackathon-2023/src/index.js",[],[],"/Users/Vito/Desktop/React/Mountain-Hackathon-2023/src/App.js",["23"],[],"/Users/Vito/Desktop/React/Mountain-Hackathon-2023/src/reportWebVitals.js",[],[],"/Users/Vito/Desktop/React/Mountain-Hackathon-2023/src/chatgpt-nodejs/chat.js",["24","25","26","27","28","29","30"],[],"\n\n\nconst { Configuration, OpenAIApi } = require(\"openai\");\nrequire('dotenv').config()\n\nconst configuration = new Configuration({\n    apiKey: process.env.OPENAI_API_KEY,\n});\nconst openai = new OpenAIApi(configuration);\n\n\nfunction inputPass(input, mood){\n    responseGenerator(input, mood)\n\n}\n\n\nasync function responseGenerator (input, mood) {\n    mood = oppositeMood(mood)\n    let inputMessage = \"write a response message to\" + input + \"in a\" + mood + \"tone\"\n    const completion = await openai.createCompletion({\n        model: \"text-davinci-003\",\n        prompt: inputMessage,\n        max_tokens: 1000,\n    });\n    // console.log(completion.data.choices[0].text);\n    // getReturnMessage(completion.data.choices[0].text)\n    return completion.data.choices[0].text\n}\n\n\nasync function oppositeMood (moodInput) {\n    let opposite = (\"what is the opposite of\" + moodInput)\n    const completion = await openai.createCompletion({\n        model: \"text-davinci-003\",\n        prompt: opposite,\n        max_tokens: 1000,\n    });\n    // console.log(completion.data.choices[0].text);\n    // getReturnMessage(completion.data.choices[0].text)\n    return completion.data.choices[0].text\n}\n\n// export default Chat\n\n(async () => {\n    input = \"i want food\"\n    mood = \"angry\"\n    response = (await responseGenerator(input, mood))\n    console.log(response)\n})()\n\n// while(1){ \n\n//     (async () => {\n//         response = (await responseGenerator(input, mood))\n//         console.log(response)\n//     })()\n// }\n",{"ruleId":"31","severity":1,"message":"32","line":3,"column":10,"nodeType":"33","messageId":"34","endLine":3,"endColumn":27},{"ruleId":"31","severity":1,"message":"35","line":13,"column":10,"nodeType":"33","messageId":"34","endLine":13,"endColumn":19},{"ruleId":"36","severity":2,"message":"37","line":48,"column":5,"nodeType":"33","messageId":"38","endLine":48,"endColumn":10},{"ruleId":"36","severity":2,"message":"39","line":49,"column":5,"nodeType":"33","messageId":"38","endLine":49,"endColumn":9},{"ruleId":"36","severity":2,"message":"40","line":50,"column":5,"nodeType":"33","messageId":"38","endLine":50,"endColumn":13},{"ruleId":"36","severity":2,"message":"37","line":50,"column":41,"nodeType":"33","messageId":"38","endLine":50,"endColumn":46},{"ruleId":"36","severity":2,"message":"39","line":50,"column":48,"nodeType":"33","messageId":"38","endLine":50,"endColumn":52},{"ruleId":"36","severity":2,"message":"40","line":51,"column":17,"nodeType":"33","messageId":"38","endLine":51,"endColumn":25},"no-unused-vars","'responseGenerator' is defined but never used.","Identifier","unusedVar","'inputPass' is defined but never used.","no-undef","'input' is not defined.","undef","'mood' is not defined.","'response' is not defined."]