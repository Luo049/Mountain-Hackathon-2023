{"ast":null,"code":"var _jsxFileName = \"/Users/Vito/Desktop/React/reactjs/Mountain-Hackathon-2023/src/App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Configuration,\n  OpenAIApi\n} = require(\"openai\");\nrequire('dotenv').config();\nconst configuration = new Configuration({\n  apiKey: process.env.OPENAI_API_KEY\n});\nconst openai = new OpenAIApi(configuration);\nexport async function responseGenerator(input, mood) {\n  mood = oppositeMood(mood);\n  let inputMessage = \"write a response message to\" + input + \"in a\" + mood + \"tone\";\n  const completion = await openai.createCompletion({\n    model: \"text-davinci-003\",\n    prompt: inputMessage,\n    max_tokens: 1000\n  });\n  // console.log(completion.data.choices[0].text);\n  // getReturnMessage(completion.data.choices[0].text)\n  return completion.data.choices[0].text;\n}\nasync function oppositeMood(moodInput) {\n  let opposite = \"what is the opposite of\" + moodInput;\n  const completion = await openai.createCompletion({\n    model: \"text-davinci-003\",\n    prompt: opposite,\n    max_tokens: 1000\n  });\n  // console.log(completion.data.choices[0].text);\n  // getReturnMessage(completion.data.choices[0].text)\n  return completion.data.choices[0].text;\n}\n(async () => {\n  input = \"please eat the food\";\n  mood = \"angry\";\n  response = await responseGenerator(input, mood);\n  console.log(response);\n})();\nfunction App() {\n  responseGenerator(\"hi\", \"happy\");\n  // (async () => {\n  //   x = (await responseGenerator(\"hi how are ya\", happy))\n  //   console.log(x)\n  // })()\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Configuration","OpenAIApi","require","config","configuration","apiKey","process","env","OPENAI_API_KEY","openai","responseGenerator","input","mood","oppositeMood","inputMessage","completion","createCompletion","model","prompt","max_tokens","data","choices","text","moodInput","opposite","response","console","log","App"],"sources":["/Users/Vito/Desktop/React/reactjs/Mountain-Hackathon-2023/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\n\nconst { Configuration, OpenAIApi } = require(\"openai\");\nrequire('dotenv').config()\n\nconst configuration = new Configuration({\n    apiKey: process.env.OPENAI_API_KEY,\n  });\n  const openai = new OpenAIApi(configuration);\n\n\nexport async function responseGenerator (input, mood) {\n    mood = oppositeMood(mood)\n    let inputMessage = \"write a response message to\" + input + \"in a\" + mood + \"tone\"\n    const completion = await openai.createCompletion({\n        model: \"text-davinci-003\",\n        prompt: inputMessage,\n        max_tokens: 1000,\n    });\n    // console.log(completion.data.choices[0].text);\n    // getReturnMessage(completion.data.choices[0].text)\n    return completion.data.choices[0].text\n}\n\n\nasync function oppositeMood (moodInput) {\n    let opposite = (\"what is the opposite of\" + moodInput)\n    const completion = await openai.createCompletion({\n        model: \"text-davinci-003\",\n        prompt: opposite,\n        max_tokens: 1000,\n    });\n    // console.log(completion.data.choices[0].text);\n    // getReturnMessage(completion.data.choices[0].text)\n    return completion.data.choices[0].text\n}\n\n\n\n \n(async () => {\n    input = \"please eat the food\"\n    mood = \"angry\"\n    response = (await responseGenerator(input, mood))\n    console.log(response)\n  })()\n\n\nfunction App() {\n  \n  responseGenerator(\"hi\", \"happy\")\n  // (async () => {\n  //   x = (await responseGenerator(\"hi how are ya\", happy))\n  //   console.log(x)\n  // })()\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        \n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAAC;AAGnB,MAAM;EAAEC,aAAa;EAAEC;AAAU,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AACtDA,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,EAAE;AAE1B,MAAMC,aAAa,GAAG,IAAIJ,aAAa,CAAC;EACpCK,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC;AACtB,CAAC,CAAC;AACF,MAAMC,MAAM,GAAG,IAAIR,SAAS,CAACG,aAAa,CAAC;AAG7C,OAAO,eAAeM,iBAAiB,CAAEC,KAAK,EAAEC,IAAI,EAAE;EAClDA,IAAI,GAAGC,YAAY,CAACD,IAAI,CAAC;EACzB,IAAIE,YAAY,GAAG,6BAA6B,GAAGH,KAAK,GAAG,MAAM,GAAGC,IAAI,GAAG,MAAM;EACjF,MAAMG,UAAU,GAAG,MAAMN,MAAM,CAACO,gBAAgB,CAAC;IAC7CC,KAAK,EAAE,kBAAkB;IACzBC,MAAM,EAAEJ,YAAY;IACpBK,UAAU,EAAE;EAChB,CAAC,CAAC;EACF;EACA;EACA,OAAOJ,UAAU,CAACK,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;AAC1C;AAGA,eAAeT,YAAY,CAAEU,SAAS,EAAE;EACpC,IAAIC,QAAQ,GAAI,yBAAyB,GAAGD,SAAU;EACtD,MAAMR,UAAU,GAAG,MAAMN,MAAM,CAACO,gBAAgB,CAAC;IAC7CC,KAAK,EAAE,kBAAkB;IACzBC,MAAM,EAAEM,QAAQ;IAChBL,UAAU,EAAE;EAChB,CAAC,CAAC;EACF;EACA;EACA,OAAOJ,UAAU,CAACK,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;AAC1C;AAKA,CAAC,YAAY;EACTX,KAAK,GAAG,qBAAqB;EAC7BC,IAAI,GAAG,OAAO;EACda,QAAQ,GAAI,MAAMf,iBAAiB,CAACC,KAAK,EAAEC,IAAI,CAAE;EACjDc,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;AACvB,CAAC,GAAG;AAGN,SAASG,GAAG,GAAG;EAEblB,iBAAiB,CAAC,IAAI,EAAE,OAAO,CAAC;EAChC;EACA;EACA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAQ,SAAS,EAAC,YAAY;MAAA,wBAE5B;QAAK,GAAG,EAAEX,IAAK;QAAC,SAAS,EAAC,UAAU;QAAC,GAAG,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eAClD;QAAA,WAAG,OACI;UAAA,UAAM;QAAU;UAAA;UAAA;UAAA;QAAA,QAAO,wBAC9B;MAAA;QAAA;QAAA;QAAA;MAAA,QAAI,eACJ;QACE,SAAS,EAAC,UAAU;QACpB,IAAI,EAAC,qBAAqB;QAC1B,MAAM,EAAC,QAAQ;QACf,GAAG,EAAC,qBAAqB;QAAA,UAC1B;MAED;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA;EAEG;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,KA5BQ6B,GAAG;AA8BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}